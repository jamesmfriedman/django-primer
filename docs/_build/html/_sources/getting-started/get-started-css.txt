CSS
========================

Namespaces
------------------------

By far the most important thing that your front end developer may or may not be doing. CSS namespacing allows you to target specific sections of your site without affecting the rest of it. These are css classnames that are generated by ``primer.middleware.AutoMiddleware`` and appended to the html tag. It will spit out two classes: view-your-view-name and app-your-app-name. It is available as a template context variable ``css_namespace``, so you can also add anywhere in your individual templates if you need to.

.. code-block:: html
    
    # example for a view called "foo" inside of "awesome" app
    <html class="view-foo app-awesome">


Mix this in with the ability to nest selectors in LESS or SASS, and you can save yourself loads of time and avoid endless headaches.

.. code-block:: css

    /* only affect stuff in the view named foo */
    .view-foo.app-awesome {
        .btn { background: brown; }
        p { color:red; }
    }

    /* affect all buttons in the awesome app */
    .app-awesome {
        .btn {
            background: red;
            padding: 20px;
        }
    }

.. NOTE::
    **Bonus:** If you are using Primer's ajax page handling, the namespace will be swapped for you automatically.